/*
* {
    font-family: cursive;
    font-weight: 100;
    font-size: 30px;
}*/
/* cambiar el comportamiento de las cajas 
a los elementos en linea no se le puede dar height ni width */
h2 {
    display: inline-block;
    background-color: rgb(40, 230, 214);
    /* padding: distancia entre texto y caja, short-hand property 
    1ro: top, 2do: right, 3ro: bottom, 4to: left */
    padding: 100px;
    box-sizing: border-box;
    text-align: center;
    /* margin: distancia entre cajas */
    margin: 10px;
    border-radius: 50%; /* circulos */
    border: 20px dashed rgb(44, 78, 189);
    box-shadow: 30px 20px 15px 0 blue; /* si lo repetimos después de una coma se hace más intenso */
    text-shadow: 2px 2px 7px rgb(255, 255, 255), 2px 2px 7px rgb(255, 255, 255), 2px 2px 7px rgb(255, 255, 255);
    /* función para rotar */
    transform: rotate(45deg);
}
.box1 {
    width: 200px;
    height: 200px;
    background: blueviolet;
    margin: auto; /* para centrar bloques */
    border: 10px solid rgb(14, 56, 172); 
}
.box2 {
    width: 200px;
    height: 200px;
    background: chartreuse;
    margin: auto;
    outline: 10px solid salmon; /* border que no ocupa un lugar real */
}
/* position: 
relative: sigue conservando el espacio que tenía 
top y left tienen prioridad  */
/* z-index: orden, adelante y atras, valor más alto adelante, solo funciona cuando la caja está posicionada */ 
/*div {
    width: 120px;
    height: 120px;
    display: block;
    text-align: center;
    font-size: 20px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: 400;
    padding-top: 40px;
}*/
.caja1 {
    background-color: skyblue;
    margin: auto;
    position: relative;
    z-index: 150;
}
.caja2 {
    background-color: rgb(183, 135, 216);
    margin: auto;
    position: relative;
    z-index: 100;
    top: -100px; 
    left: 20px;
}
.caja3 {
    background-color: rgb(90, 8, 138);
    margin: auto;
    position: relative;
    z-index: 50;
    top: -200px; 
    left: 40px;
}
.caja4 {
    background-color:rgb(16, 3, 133);
    margin: auto;
    position: relative;
    top: -300px; 
    left: 60px;
}
.contenedor {
    width: 300px;
    height: 300px;
    background: rosybrown;
    margin: 40px;
    position: relative;
}
.hijo {
    background: rgb(190, 112, 171);
    height: 120px;
    width: 120px;
    position: relative;
    top: -20px;
    left: -20px;
    z-index: -1; /* única forma de poner al hijo por debajo del padre, no definir el z-index del contenedor */ 
}
/*div {
    display: block;
    background: rgb(202, 100, 100);
    position: absolute;   no conserva su espacio, lo de abajo toma su lugar, se ajusta al ancho del contenido 
}
div div {
    height: 100px;
    width: 100px;  
    background: rgb(183, 135, 216);
}*/
.contenedor2 {
    position: relative;
    border: 4px solid rgb(16, 3, 133);
    margin: 50px auto; /* con auto se centra en el ancho */
    height: 450px;
    width: 450px;
}
.caja5 {
    left: 0;
}
.caja6 {
    opacity: .5;
    /* top: 0; distancia a partir del viewport aunque haya un contenedor si este no está posicionado */
    right: 0;
}
.caja7 {
    bottom: 0;
}
.caja8 {
    bottom: 0;
    right: 0;
}
.caja9 {
    /* centrar caja */
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    margin: auto;
}
/* position: fixed, igual que el absolute pero queda fijo cuando scrolleas
se puede usar para una barra de navegación */
body {
    padding-top: 20px;
}
.fixed {
    background: hotpink;
    position: fixed;
    margin-top: -20px;
}
/* position: sticky, se conserva el espacio (relative) y se queda fijo (fixed) cuando aparece.